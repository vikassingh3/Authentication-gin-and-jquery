basePath: /api
definitions:
  models.Admin:
    properties:
      email:
        type: string
      id:
        type: integer
      names:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      country:
        type: string
      dob:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      state:
        type: string
    type: object
info:
  contact:
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API
  version: "2.0"
paths:
  /admin/allUser:
    get:
      consumes:
      - application/json
      description: Get all exists users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: get all exists users
      tags:
      - Users
  /admin/createUser:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: create a new user
      tags:
      - User
  /admin/delete{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by given ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete user by given ID
      tags:
      - User
  /admin/get/{id}:
    get:
      consumes:
      - application/json
      description: Get user by given ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: get user by given ID
      tags:
      - User
  /admin/logout:
    post:
      consumes:
      - application/json
      description: logout as admin.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
      security:
      - ApiKeyAuth: []
      summary: logout as admin
      tags:
      - Admin
  /admin/resetPass:
    post:
      consumes:
      - application/json
      description: resetpass as admin.
      parameters:
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
      security:
      - ApiKeyAuth: []
      summary: resetpass as admin
      tags:
      - Admin
  /admin/update{id}:
    put:
      consumes:
      - application/json
      description: Update user by given ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: update
        in: body
        name: Update
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update user by given ID
      tags:
      - User
  /admin/userlogin:
    post:
      consumes:
      - application/json
      description: login as user.
      parameters:
      - description: Email
        in: body
        name: Details
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: login as user
      tags:
      - User
  /forgotPass:
    post:
      consumes:
      - application/json
      description: forgotpass as admin.
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
      summary: forgotpass as admin
      tags:
      - Admin
  /login:
    post:
      consumes:
      - application/json
      description: Login as admin.
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
      summary: login as admin
      tags:
      - Admin
  /register:
    post:
      consumes:
      - application/json
      description: Register Amin
      parameters:
      - description: Register Admin
        in: body
        name: RegisterAdmin
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses: {}
      security:
      - BasicAuth: []
      summary: Register Admin
      tags:
      - Admin
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
